<?php

namespace craftplugins\company\fields;

use Craft;
use craft\base\ElementInterface;
use craft\base\Field;
use craft\helpers\Json;
use craftplugins\company\models\CompanyModel;

/**
 * Class CompanyField
 *
 * @package craftplugins\company\fields
 */
class CompanyField extends Field
{
    /**
     * @return string
     */
    public static function displayName(): string
    {
        return Craft::t('company', 'Company Autocomplete');
    }

    /**
     * @return string
     */
    public static function valueType(): string
    {
        return CompanyModel::class;
    }

    /**
     * @param mixed                             $value
     * @param \craft\base\ElementInterface|null $element
     *
     * @return \craftplugins\company\models\CompanyModel|mixed
     */
    public function normalizeValue($value, ElementInterface $element = null)
    {
        if (is_string($value)) {
            $value = Json::decodeIfJson($value);
        }

        if ($value instanceof CompanyModel) {
            return $value;
        }

        if (is_array($value)) {
            return new CompanyModel($value);
        }

        return null;
    }

    // public function serializeValue($value, ElementInterface $element = null)
    // {
    //     return parent::serializeValue($value, $element); // TODO: Change the autogenerated stub
    // }

    /**
     * @param mixed                             $value
     * @param \craft\base\ElementInterface|null $element
     *
     * @return string
     * @throws \Twig\Error\LoaderError
     * @throws \Twig\Error\RuntimeError
     * @throws \Twig\Error\SyntaxError
     */
    public function getInputHtml($value, ElementInterface $element = null): string
    {
        $view = Craft::$app->view;
        $id = $view->formatInputId($this->handle);

        return $view->renderTemplate('company/_input', [
            'element' => $element,
            'errors' => $this->getErrors(),
            'field' => $this,
            'id' => $id,
            'name' => $this->handle,
            'value' => $value,
        ]);
    }

    // public function getSettingsHtml()
    // {
    //     return parent::getSettingsHtml(); // TODO: Change the autogenerated stub
    // }
}
